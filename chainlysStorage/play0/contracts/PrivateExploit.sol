// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;
import "@openzeppelin/contracts/access/Ownable.sol";

contract PrivateExploit is Ownable{
  uint256 public customerid;
  bytes32 private _password;

  constructor(uint256 id, bytes32 password){
    customerid  = id;
    _password = password;
  }
  modifier verifyPassword(bytes32 password)
  {
    require(password == _password, "Password does not match");
    _;
  }

  function depositFunds(uint256 _amount) payable public onlyOwner {
     // deposit amount to the contract
  }
 
  function withdrawFunds(bytes32 password) public  verifyPassword(password){
    (bool os, ) = payable(msg.sender).call{value:address(this).balance}("");
    require(os, "Failed to withdraw funds!");
  }
}
